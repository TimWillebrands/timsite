---
import Minimal from "../layouts/Minimal.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../consts";

const ctaClasses =
    "block border-3 border-black rounded-xl py-[0.8em] px-[1.2em] text-center font-medium text-black no-underline transition-colors duration-200 hover:bg-gray-100";
const featuredLinkClasses =
    "block border-3 border-black rounded-xl p-4 text-black no-underline transition-colors duration-200 hover:bg-gray-100 hover:underline";
---

<!-- contains nothing but filter => functionally same as a style elem--><!-- zero its dimensions and hide it from screen readers-->
<svg width="0" height="0" aria-hidden="true">
    <!-- use units relative to input size-->
    <!-- sRGB is what we normally want (but not default)-->
    <filter
        id="grain"
        color-interpolation-filters="sRGB"
        primitiveUnits="objectBoundingBox"
    >
        <!-- generate fine noise-->
        <feTurbulence type="fractalNoise" baseFrequency=".713" numOctaves="4"
        ></feTurbulence>
        <!-- use noise as displacement map-->
        <feDisplacementMap in="SourceGraphic" scale=".3" xChannelSelector="R"
        ></feDisplacementMap>
        <!-- place filter input underneath to cover transparent edge pixels-->
        <feBlend in2="SourceGraphic"></feBlend>
    </filter>
</svg>

<Minimal title={SITE_TITLE} description={SITE_DESCRIPTION}>
    <div
        class="mx-auto grid min-h-screen max-w-[1200px] grid-cols-1 items-start gap-12 px-6 py-8 md:grid-cols-2 md:gap-16 md:px-8 md:py-16"
    >
        <div>
            <h1 transition:name="title" class="mb-[0.25em] text-[3.2em]">
                Tim Willebrands
            </h1>
            <h2 class="mb-4 text-[1.8em] font-semibold">
                Pragmatic builder of maintainable systems.
            </h2>
            <p class="text-lg leading-[1.7]">
                I design and ship robust, developer-friendly platforms. Minimal
                overhead. Clean abstractions. Systems that scale with the team.
            </p>
        </div>
        <div class="flex flex-col gap-8">
            <nav class="flex flex-col gap-4">
                <a href="/work" class={ctaClasses}>View Work</a>
                <a href="/writing" class={ctaClasses}>Read Writing</a>
            </nav>
            <section aria-labelledby="featured">
                <h3 id="featured" class="mb-[0.75em] text-[1.4em]">Featured</h3>
                <ul class="flex list-none flex-col gap-4 p-0">
                    <li>
                        <a href="/work/auxin" class={featuredLinkClasses}>
                            Auxin - Federated GraphQL Gateway
                        </a>
                    </li>
                    <li>
                        <a
                            href="/work/proompting-party"
                            class={featuredLinkClasses}
                        >
                            proompting.party - Live demo infrastructure
                        </a>
                    </li>
                    <li>
                        <a
                            href="/work/ecommerce-migration"
                            class={featuredLinkClasses}
                        >
                            Automating a 10,000-item e-commerce migration
                        </a>
                    </li>
                </ul>
            </section>
        </div>
    </div>
    <svg class="background">
        <linearGradient id="g01">
            <stop stop-color="#e2e4e5"></stop>
            <stop stop-color="#fcc5c1" offset="1"></stop>
        </linearGradient>
        <linearGradient id="g02">
            <stop stop-color="#aecee7" offset=".2"></stop>
            <stop stop-color="#f5feae" offset="1"></stop>
        </linearGradient>
        <g>
            <rect width="100%" height="100%" fill="#f1f1f1"></rect>
            <ellipse rx="75%" ry="45%" fill="url(#g01)"></ellipse>
            <circle r="25%" fill="url(#g02)"></circle>
        </g>
    </svg>
</Minimal>

<style>
    /* Background stuff inspired by: FrontendMasters.com */
    .background {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        /* clip-path: inset(calc(5% + 4px)); */
        filter: saturate(50%);
        z-index: -1;
    }

    g {
        filter: url(#grain);
    }

    rect,
    ellipse,
    circle {
        transform-box: fill-box;
        transform-origin: 50%;
    }

    ellipse,
    circle {
        cx: 50%;
        cy: 50%;
        filter: blur(calc(4vmin + 4vmax));
    }

    .background ellipse {
        translate: -10% -5%;
        rotate: -22.5deg;
    }
    .background circle {
        cy: 57.5%;
        rotate: 45deg;
    }
</style>
